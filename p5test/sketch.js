function setup() {
    createCanvas(800, 800);
    background(0);
   const data = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null,null,null,null,null,null,null,null,null,null,null,null,0,0,0,0,0,0,0,0,0,0,0,0,0,24,56,15,82,22,0,0,0,0,0,7,0,9,0,91,50,167,56,302,338,508,466,323,113,210,183,218,173,92,11,252,93,81,0,7,12,58,136,182,96,111,97,81,114,71,100,65,131,71,69,68,63,59,80,80,242,196,135],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null,null,null,null,null,null,null,null,null,null,null,null,0,0,0,0,0,0,0,0,0,0,0,42,63,75,38,20,80,87,143,113,57,0,56,90,43,239,105,53,263,169,214,233,197,199,290,278,405,344,227,502,392,70,90,92,241,218,174,127,2,16,35,50,163,170,158,113,114,119,122,71,61,54,76,96,133,57,66,92,105,103,137],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null,null,null,null,null,null,null,null,null,null,null,null,0,0,0,0,0,0,0,0,0,0,0,0,35,65,66,39,15,82,72,86,31,86,52,49,77,60,235,109,266,475,454,465,603,408,499,458,258,504,424,40,177,187,109,64,26,15,111,196,75,4,16,84,235,280,195,249,195,171,134,108,146,96,122,87,64,74,88,82,97,96,90],[91,75,33,42,0,0,0,0,0,0,0,0,0,0,0,0,null,null,null,null,null,null,null,null,null,null,null,null,null,0,0,0,0,0,0,0,0,0,0,0,37,103,47,199,161,242,180,307,181,187,208,74,101,227,251,195,225,114,85,174,342,239,245,362,192,107,151,192,491,457,184,60,219,113,114,20,72,37,18,38,26,23,35,287,224,180,210,188,107,184,146,148,106,96,86,61,70,80,166,132],[155,112,93,60,45,97,84,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,101,166,168,147,158,97,166,222,393,200,161,257,189,164,346,388,278,309,384,326,198,152,481,375,182,109,90,79,59,94,68,60,79,22,24,14,14,47,60,258,251,114,109,140,168,129,105,84,128,121,136,86,98,127],[68,103,126,90,11,194,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,117,159,159,213,224,216,217,172,160,269,377,363,274,474,251,183,362,400,197,298,301,67,64,86,106,101,59,62,90,68,127,129,34,12,19,18,17,55,32,67,189,75,94,221,149,88,124,155,143,154,117,89,81],[183,137,169,137,106,148,169,286,108,82,26,53,25,53,11,22,0,28,0,0,0,9,10,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,92,156,240,215,176,287,499,489,522,519,459,223,205,299,317,399,242,155,125,103,69,86,117,193,119,113,25,34,24,61,32,48,44,33,47,46,53,123,92,110,128,199,175,163,125,127,111,120],[267,329,614,366,273,203,153,304,529,86,130,157,12,30,61,45,56,50,46,20,53,60,60,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,216,238,219,308,463,448,412,223,413,346,244,246,344,320,186,277,207,182,93,114,85,178,61,125,61,40,29,73,97,99,84,44,69,73,67,69,83,97,131,160,114,111,115,101,56],[340,251,69,54,75,65,15,100,154,2,9,26,153,115,124,64,24,162,55,52,64,67,51,8,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,169,149,179,376,474,384,336,335,448,309,373,397,297,227,236,179,144,91,139,290,177,156,142,42,66,92,126,147,182,137,114,105,77,72,57,97,114,90,132,146,128,88,108,119],[81,66,53,29,70,85,72,51,447,164,145,186,196,85,102,96,86,120,106,101,40,56,66,31,38,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,191,418,655,439,286,189,202,382,300,342,470,402,242,185,185,238,106,250,294,162,92,92,172,81,80,138,154,110,118,94,84,140,114,87,90,97,111,144,118,158,130,116,122],[99,84,61,55,118,144,95,137,125,90,76,59,62,57,40,268,61,55,151,120,75,95,17,86,105,31,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,223,7,183,130,428,455,194,392,323,170,249,139,123,459,322,395,216,244,251,172,95,81,38,127,75,208,129,108,129,134,93,52,110,121,80,103,85,77,93,138,97,75,70,68],[250,258,185,88,101,95,113,129,235,206,126,98,65,50,64,73,37,61,169,335,111,39,116,101,99,83,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,35,94,333,286,126,449,310,236,181,115,204,141,332,229,100,118,104,82,45,85,121,110,85,90,97,123,168,158,124,86,81,72,104,99,89,130,135,98,54,95,128,168,129,132],[294,275,195,165,86,106,103,101,113,141,147,137,60,124,309,281,43,146,74,79,106,267,67,247,223,144,22,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,227,236,5,133,515,185,468,484,242,268,307,115,107,65,59,44,74,58,71,59,64,40,56,131,96,86,86,185,195,100,59,54,70,85,86,141,136,244,137,48,51,87,149,170,129],[125,285,128,239,123,99,123,129,140,115,203,95,238,169,242,311,159,44,88,91,93,93,165,402,82,180,101,71,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,24,25,0,0,0,0,0,100,610,134,325,447,224,492,613,478,398,286,275,264,151,101,102,72,79,116,101,49,70,77,97,137,87,85,84,82,94,112,135,37,97,101,108,108,59,70,134,124,156,123,130,119],[49,82,72,106,174,125,160,121,114,117,89,90,174,162,231,177,61,54,85,121,114,140,200,245,410,302,126,155,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,70,82,41,106,11,31,79,317,400,431,369,212,307,130,366,458,306,137,136,123,90,84,80,95,54,78,84,149,134,91,130,154,189,139,98,81,76,65,67,65,73,18,48,42,48,88,28,27,146,88],[60,65,68,67,64,63,136,210,110,102,98,111,104,128,94,72,63,93,114,153,146,199,340,741,378,193,228,226,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,158,675,226,113,459,569,256,335,367,381,400,269,227,282,488,417,227,80,21,9,76,88,73,84,67,82,91,151,119,216,154,173,134,118,151,144,130,48,116,84,72,49,88,21,30,25,23,22],[24,27,65,77,31,69,101,300,507,284,242,110,89,100,89,51,67,75,78,116,157,168,204,526,759,445,421,225,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,141,217,576,493,223,239,264,369,399,423,368,132,54,280,301,176,100,16,11,27,141,54,32,43,54,80,136,178,140,171,408,285,180,186,287,153,130,134,71,156,72,78,122,46,9,11,15],[55,25,34,24,52,48,51,120,81,98,83,92,68,79,60,48,57,138,78,78,91,120,234,199,364,589,238,139,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,7,25,0,89,172,453,590,26,374,143,354,373,146,41,390,196,133,82,19,10,18,29,86,79,43,35,44,64,62,119,234,382,416,237,341,261,289,239,189,125,121,137,83,107,44,45,29,15,26],[81,56,47,44,36,80,44,32,48,65,62,40,78,73,63,66,59,73,78,77,101,64,124,117,124,83,75,66,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,10,19,69,48,58,8,136,0,0,0,0,86,84,11,14,14,178,191,76,0,13,48,28,6,7,63,34,30,21,33,65,83,158,259,463,368,287,279,351,62,274,148,111,82,116,78,36,28,26,35,8,6],[44,63,47,52,45,51,50,65,44,53,64,90,87,79,98,74,71,97,68,74,70,60,76,43,25,50,25,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,50,68,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,21,0,20,30,15,13,22,33,67,35,63,74,84,148,158,289,327,203,154,412,299,184,154,22,90,67,52,26,20,75,13,6],[41,44,53,28,44,60,82,57,48,103,81,86,117,92,83,57,69,62,61,93,125,110,104,100,74,67,58,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,15,70,32,31,21,25,12,28,25,34,73,119,136,281,535,465,496,298,115,103,63,89,92,52,12,2,6,32,6,25],[45,76,61,69,34,49,36,66,72,96,126,99,90,108,105,83,72,72,64,62,56,69,105,111,90,98,85,38,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,7,72,55,99,46,63,96,129,45,100,69,128,192,255,509,300,399,281,240,114,53,14,8,76,9,12,5,14,7,10,13],[97,41,27,34,51,41,78,85,64,52,54,97,101,87,78,91,82,76,110,58,63,26,103,59,25,109,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,19,23,79,106,322,223,208,204,215,140,347,356,251,236,145,188,112,123,49,55,36,64,10,13,15,9,10,8,13],[67,116,59,37,28,29,52,68,113,78,96,45,85,84,118,144,102,87,84,38,53,91,81,86,57,34,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,7,18,22,26,97,109,225,278,231,375,362,113,243,151,189,141,72,101,79,31,38,39,7,12,14,7,19,9,10,13],[75,55,56,32,37,37,63,99,71,63,88,93,71,70,90,133,83,124,112,95,55,34,62,110,76,49,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,8,9,22,19,62,98,25,49,156,125,229,390,361,277,285,238,155,134,77,59,85,70,65,19,13,9,14,16,10,16,16],[82,81,36,49,38,48,52,67,103,84,70,75,82,112,111,134,99,165,286,150,98,21,49,19,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,7,11,8,82,185,270,218,218,93,145,317,307,195,89,296,354,118,232,111,84,75,23,31,13,35,7,14,18,13,23,36],[93,73,40,44,77,52,72,63,90,76,94,38,64,97,85,181,132,118,136,155,77,39,53,43,24,10,1,35,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,26,159,239,432,459,247,240,172,178,145,211,270,123,283,171,196,139,92,46,23,14,9,10,16,17,14,45,99,92],[58,79,57,30,88,89,56,42,63,82,83,42,61,81,107,96,98,101,193,220,196,88,142,111,70,107,235,0,248,81,52,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,77,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,111,75,140,251,138,131,209,458,380,237,268,310,345,116,148,111,80,33,29,16,9,15,20,35,37,109,194,155],[98,412,336,48,65,239,463,153,108,358,49,41,42,38,48,64,138,132,126,120,152,185,204,241,115,98,27,118,154,324,563,540,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,153,128,89,150,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,56,0,36,0,20,59,149,61,268,225,317,421,371,541,453,426,299,408,287,142,82,40,33,18,25,68,104,80,65,36,24,53,93],[34,46,173,357,360,92,270,363,80,28,38,32,112,247,121,84,75,47,53,51,121,148,247,150,44,51,102,98,92,84,103,83,8,69,10,10,0,0,0,0,0,0,0,0,0,0,0,0,39,274,354,104,0,0,0,0,0,0,0,0,0,0,0,0,141,174,9,96,48,84,20,10,73,209,92,299,172,364,328,360,529,181,492,203,324,160,125,14,18,10,34,94,231,61,28,24,24,20,39,32],[239,67,102,310,185,104,192,301,64,38,93,76,68,114,186,312,191,116,67,36,64,58,57,64,50,13,106,111,111,112,144,136,64,22,9,37,17,0,0,0,0,0,0,0,0,0,0,0,0,4,21,0,0,0,0,0,0,0,0,0,0,0,0,5,17,201,200,528,254,236,232,90,122,180,193,605,314,351,487,615,448,514,453,368,263,196,53,22,44,92,110,390,259,238,221,224,139,172,204,143],[217,407,311,34,139,211,142,76,47,41,75,152,182,255,189,81,51,135,114,86,67,26,23,27,27,36,57,38,122,129,93,77,84,60,45,0,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,51,323,458,182,749,676,102,354,545,315,430,300,223,290,344,330,598,461,579,440,396,389,224,90,77,45,37,47,78,108,314,178,287,398,190,245,264,203],[0,0,9,122,94,52,62,47,54,137,119,117,70,107,108,144,174,173,184,98,72,23,15,10,10,10,11,30,86,221,39,66,107,49,8,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,81,106,230,394,370,422,533,687,193,194,360,252,276,227,170,164,289,397,447,386,284,200,144,142,111,56,36,30,28,28,61,83,242,284,189,181,124,49,0],[0,0,0,20,108,146,156,298,144,239,136,70,105,61,132,112,154,190,202,177,60,52,24,23,10,10,10,57,96,159,317,23,0,110,35,19,1,0,0,0,0,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,88,108,80,301,176,482,567,313,261,150,148,161,114,233,574,550,626,445,228,303,366,228,189,191,115,58,49,38,12,6,12,15,0,0,0,0,0,0],[73,144,69,130,48,228,281,231,143,60,38,83,91,94,246,150,306,236,178,229,203,156,80,46,10,51,32,9,89,80,98,221,130,18,0,0,0,0,0,0,0,0,0,39,0,0,0,0,0,73,87,0,0,0,0,0,0,0,0,0,0,0,0,31,107,212,138,234,178,211,193,121,128,130,487,611,649,674,586,420,510,328,259,266,187,62,104,94,170,109,109,11,0,0,0,0,0,0,0,0],[45,202,197,465,315,285,173,79,61,9,28,64,169,197,241,507,332,285,284,491,80,52,31,53,20,99,60,54,119,172,226,295,115,0,0,0,0,0,0,0,0,0,71,65,0,0,0,98,68,30,28,0,0,17,75,46,128,33,0,0,0,0,0,9,30,21,25,68,97,98,74,108,212,449,606,456,363,474,408,521,497,448,349,247,166,109,108,74,112,101,0,0,0,0,0,0,0,0,0,0],[0,42,145,166,159,256,275,248,181,78,106,7,10,12,84,197,107,116,163,187,198,274,86,41,10,140,92,111,100,121,229,278,0,0,0,0,0,0,0,0,0,58,61,12,114,88,145,91,28,37,21,89,284,51,216,81,53,159,26,111,314,0,0,0,0,2,16,3,30,13,22,66,164,514,395,430,375,295,337,264,329,266,230,160,190,103,68,34,91,22,0,0,0,0,0,0,0,0,0,0],[0,9,169,272,324,138,195,162,122,32,83,89,13,33,22,73,161,251,131,78,217,134,64,14,73,170,76,230,229,285,162,0,0,0,0,0,0,0,0,0,0,6,0,235,138,198,189,119,127,124,153,215,212,148,66,50,183,95,106,71,85,24,22,25,21,29,20,45,12,13,58,82,77,150,178,183,196,208,111,45,73,132,102,32,8,126,30,35,22,0,0,0,0,0,0,0,0,0,0,0],[5,7,90,77,356,353,59,105,101,65,18,0,9,30,57,0,0,0,6,45,235,96,49,17,37,69,106,264,298,138,0,0,0,0,0,0,0,0,0,0,0,0,0,12,132,212,95,166,275,296,346,297,282,117,120,196,183,229,362,143,17,14,186,34,65,176,88,156,106,73,162,161,160,375,269,323,244,229,103,182,154,221,154,110,68,68,51,37,0,0,0,0,0,0,null,null,null,null,null,null],[0,0,127,66,37,133,56,0,138,14,133,0,87,99,130,214,70,0,0,8,4,10,27,64,34,75,77,169,142,227,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,181,84,234,403,550,294,668,355,162,294,378,278,101,302,105,248,185,70,35,183,214,254,183,177,351,274,280,385,285,235,229,132,301,256,209,258,193,136,66,66,53,25,0,0,0,0,0,0,0,null,null,null,null,null,null],[0,0,0,0,0,0,0,0,0,21,71,0,279,60,82,65,52,93,12,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,94,191,324,159,287,300,289,565,454,387,240,337,71,420,483,415,242,76,393,281,250,290,439,293,331,326,204,404,324,394,405,258,242,239,360,284,217,128,96,55,15,0,0,0,0,0,0,0,null,null,null,null,null,null],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,149,253,99,217,0,0,0,0,0,0,0,0,0,83,97,154,208,409,330,229,280,512,308,190,237,297,419,328,463,271,401,538,474,317,370,290,232,214,280,244,283,328,369,453,357,243,169,161,118,266,201,106,38,0,0,0,0,0,0,0,0,null,null,null,null,null,null],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,92,0,0,0,114,235,0,0,0,0,0,0,9,53,112,88,139,196,307,400,434,318,300,478,258,490,407,515,695,448,494,355,291,297,286,160,195,205,164,156,292,455,515,433,235,207,108,103,59,73,0,0,0,0,0,0,0,null,null,null,null,null,null,null],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,285,361,0,0,24,344,285,0,0,0,0,0,0,53,90,108,143,266,316,354,296,402,288,329,293,274,332,401,437,607,648,344,448,200,189,231,214,128,135,94,62,148,226,334,330,231,102,284,163,50,9,0,0,0,0,0,0,0,null,null,null,null,null,null,null],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,0,0,0,0,0,0,0,211,265,26,0,595,368,266,0,0,0,0,10,13,41,63,118,202,225,275,219,321,268,208,213,301,205,334,230,343,308,214,183,351,270,236,157,211,125,151,90,45,42,55,111,41,126,81,106,21,3,0,0,0,0,0,0,0,0,null,null,null,null,null,null,null],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,0,6,86,358,78,0,0,0,11,0,140,195,0,0,0,0,0,0,0,149,231,53,98,152,221,214,202,205,225,155,119,114,252,227,222,240,272,218,312,262,552,557,512,272,295,150,210,205,189,123,71,67,32,79,42,11,0,0,0,0,0,0,0,0,0,0,0,null,null,null,null,null,null,null],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,12,34,46,89,58,74,0,0,0,52,204,0,330,0,0,0,127,0,0,232,461,198,130,47,41,20,23,27,30,64,133,231,210,203,278,280,293,501,309,188,241,213,241,298,347,302,475,373,221,219,72,63,64,116,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null,null,null,null,null,null],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126,75,90,663,70,0,0,36,166,449,0,84,116,95,207,318,0,69,182,160,170,32,14,58,44,59,74,93,185,217,211,136,212,181,103,93,103,131,106,25,138,90,113,144,246,322,314,232,114,212,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null,null,null,null,null,null],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,219,181,0,9,251,277,0,9,323,199,256,125,371,95,0,110,33,165,173,24,299,478,395,253,125,50,42,15,95,65,0,0,0,0,0,0,0,8,30,38,8,13,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,null,null,null,null,null,null]]
    let scale = 300000;
    let buffer = 0.2*width;
    let smoothThreshold = 0;
    let pointinessScaleFactor = 20;
    widthDrawArea = width - 2*buffer;
    //get highest and lowest elevation
    let minElevation = 100000;
    let maxElevation = 0;
    for (let i = 0; i < data.length; i++) {
        for (let j = 0; j < data[i].length; j++) {
            if (data[i][j] < minElevation) {
                minElevation = data[i][j];
            }
            if (data[i][j] > maxElevation) {
                maxElevation = data[i][j];
            }
        }
    }
    //Calculate natural pointiness of the dataset
    console.log(minElevation);
    console.log(maxElevation);
    let naturalPointiness = (maxElevation - minElevation)/scale;
    console.log(naturalPointiness);
    let horizontalPointDistance = widthDrawArea/data[0].length;
    let pointinessModifier = naturalPointiness*pointinessScaleFactor;
    let drawBaseArea = height - pointinessModifier*height - 2*buffer;
    let verticalLineSeparation = drawBaseArea/data.length;

    //normalise elevations to 0-1
    let normalisedData = data.map(line => {
        return line.map(point => {
            return (point - minElevation) / (maxElevation - minElevation);
        });
    });

    //Identify points where the line briefly goes above the previous point then comes back down again
    //Change these points to the values on either side
    let smoothedData = normalisedData.map(line => {
        let newLine = [];
        for (let i = 0; i < line.length; i++) {
            if (i > 0 && i < line.length - 1) {
                if (line[i] - line[i-1] > 0 && line[i] - line[i-1] < smoothThreshold && line[i] - line[i+1] > 0 && line[i] - line[i+1] < smoothThreshold){
                    newLine.push(line[i-1]);
                } else {
                    newLine.push(line[i]);
                }
            } else {
                newLine.push(line[i]);
            }
        }
        return newLine;
    });

    //Lift everything that isn't at 0
    smoothedData = smoothedData.map(line => {
        return line.map(point => {
            if(point > 0) {
                return point + 0.1;
            } else {
                return point;
            }
        });
    });

    fill("black");
    //For each row in the data, create a line of curveVertex points
    stroke(255);
    strokeWeight(2);
    for (let i = data.length-1; i > 0; i--) {
        let lineBase = height - verticalLineSeparation*i - buffer;
        beginShape();
        //Flat line at start
        curveVertex(buffer/2, lineBase);
        curveVertex(buffer/2, lineBase);
        curveVertex(3*buffer/4, lineBase);
        for (let j = 0; j < data[i].length; j++) {
            curveVertex(buffer + j*horizontalPointDistance, lineBase-normalisedData[i][j]*height*pointinessModifier);
        }
        //Flat line at end
        curveVertex(width - 3*buffer/4 - horizontalPointDistance/2, lineBase);
        curveVertex(width - buffer/2, lineBase);
        curveVertex(width - buffer/2, lineBase);
        //Box underneath
        curveVertex(width, lineBase);
        curveVertex(width*2, height*2);
        curveVertex(buffer/2, height*2);
        endShape();
    }

    //Change black pixels to transparent
    let img = get(0, 0, width-buffer/1.7, height);
    img.loadPixels();
    for (let i = 0; i < img.pixels.length; i+=4) {
        if (img.pixels[i] == 0 && img.pixels[i+1] == 0 && img.pixels[i+2] == 0) {
            img.pixels[i+3] = 0;
        }
        //Update alpha channel for grey pixels
        else if (img.pixels[i] < 255 || img.pixels[i+1] < 255 || img.pixels[i+2] < 255) {
            //Get alpha value for this colour
            let alpha = (img.pixels[i] + img.pixels[i+1] + img.pixels[i+2])/3;
            img.pixels[i+3] = alpha;
        }
    }
    img.updatePixels();
    //overwrite background
    background(0, 0, 20);
    //Draw image to canvas
    image(img, 0, 0, width-buffer/1.7, height);
    console.log(img.pixels)




    //Clear canvas
    //background(0);
    //Draw image to canvas
    //image(img, 0, 0, width, height);
}